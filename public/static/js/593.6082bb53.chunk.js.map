{"version":3,"file":"static/js/593.6082bb53.chunk.js","mappings":"oQAwBA,MAyJA,GAAeA,EAAAA,EAAAA,IAAQ,KAAM,CAAEC,eAAe,MAA9C,EAzJwBC,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,MAAEC,EAAK,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAG9DC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,CACjCF,YAAa,GACbG,SAAU,MAGN,GAAEI,IAAOC,EAAAA,EAAAA,MAyCf,OANAC,EAAAA,EAAAA,YAAU,KACJf,KACFgB,EAAAA,EAAAA,GAASf,EAAWC,GACpBJ,EAAS,CAAEmB,KAAMC,EAAAA,KACnB,GACC,CAAClB,EAAOC,EAAWC,KAEpB,+BACE,gBAAKiB,UAAU,+BAA8B,UAC3C,gBAAKA,UAAU,aAAY,UACzB,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,MAAK,UAClB,gBAAKA,UAAU,SAAQ,UACrB,gBAAKA,UAAU,gBAAe,UAC5B,kBAAMC,OAAO,IAAID,UAAU,aAAY,WACrC,cAAGE,KAAK,aAAaF,UAAU,aAAY,UACzC,gBAAKG,IAAKC,EAAMC,MAAM,OAAOC,OAAO,OAAOC,KAAG,OAEhD,iBAAKP,UAAU,cAAa,WAC1B,kBACEQ,IAAI,kBACJR,UAAU,8BAA6B,2BAIzC,kBACEF,KAAK,WACLE,UAAU,cACVS,YAAY,eACZC,MAAOvB,EACPwB,SAAWC,IACTxB,EAAewB,EAAEC,OAAOH,OAEnBE,EAAEC,OAAOH,MAMLjB,EAAS,IACXD,EACHL,YAAa,KAPRM,EAAS,IACXD,EACHL,YAAa,iCAUpBK,EAAML,cACL,iBAAM2B,MAAO,CAAEC,MAAO,OAAQ,SAC3BvB,EAAML,kBAIb,iBAAKa,UAAU,cAAa,WAC1B,kBACEQ,IAAI,kBACJR,UAAU,8BAA6B,+BAIzC,kBACEF,KAAK,WACLE,UAAU,cACVS,YAAY,mBACZC,MAAOpB,EAIPqB,SAAWC,IACTrB,EAAYqB,EAAEC,OAAOH,OAEhBE,EAAEC,OAAOH,MAMLjB,EAAS,IACXD,EACHF,SAAU,KAPLG,EAAS,IACXD,EACHF,SAAU,sCAUjBE,EAAMF,WACL,iBAAMwB,MAAO,CAAEC,MAAO,OAAQ,SAAEvB,EAAMF,eAI1C,mBACEU,UAAU,YACVF,KAAK,SACLkB,QA3HEJ,IAEpB,GADAA,EAAEK,kBACG9B,IAAgBG,EAAU,CAC7B,MAAME,EAAQ,CAAC,EAUf,OARKL,IACHK,EAAML,YAAc,8BAGjBG,IACHE,EAAMF,SAAW,kCAGZG,EAAS,IAAKD,GACvB,CAAO,CACL,GAAIL,IAAgBG,EAClB,OAAOG,EAAS,IACXD,EACHF,SAAU,sDAGd,MAAM4B,EAAU,CACd/B,cACAgC,gBAAiB7B,GAEnBZ,EAAMD,eAAeyC,EAASxB,GAC9BN,EAAe,IACfG,EAAY,GACd,GA+FwC,oCAWrC,G","sources":["Pages/ChangePassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//login css\r\nimport \"./login.css\";\r\n\r\n//login form logo\r\nimport logo from \"../Component/assets/images/movie.png\";\r\n\r\n//router\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\n//react-redux\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\n\r\n//import action\r\nimport { login } from \"../store/Admin/admin.action\";\r\n\r\n//type\r\nimport { CLOSE_ADMIN_TOAST } from \"../store/Admin/admin.type\";\r\n\r\n//toast\r\nimport { setToast } from \"../util/Toast\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { forgotPassword } from \"../store/Admin/admin.action\";\r\n\r\nconst ChangePassword = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { toast, toastData, actionFor } = useSelector((state) => state.admin);\r\n\r\n  //State Define\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState({\r\n    newPassword: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { id } = useParams();\r\n\r\n  //Submit Functionality\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!newPassword || !password) {\r\n      const error = {};\r\n\r\n      if (!newPassword) {\r\n        error.newPassword = \"New Password is required !\";\r\n      }\r\n\r\n      if (!password) {\r\n        error.password = \"Conform Password is required !\";\r\n      }\r\n\r\n      return setError({ ...error });\r\n    } else {\r\n      if (newPassword !== password) {\r\n        return setError({\r\n          ...error,\r\n          password: \"New Password and Conform Password doesn't match !\",\r\n        });\r\n      }\r\n      const details = {\r\n        newPassword,\r\n        confirmPassword: password,\r\n      };\r\n      props.forgotPassword(details, id);\r\n      setNewPassword(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  // toast;\r\n  useEffect(() => {\r\n    if (toast) {\r\n      setToast(toastData, actionFor);\r\n      dispatch({ type: CLOSE_ADMIN_TOAST });\r\n    }\r\n  }, [toast, toastData, actionFor]);\r\n  return (\r\n    <>\r\n      <div className=\"sign section--bg sign-one-bg\">\r\n        <div className=\"bg-overlay\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"sign__content\">\r\n                  <form action=\"#\" className=\"sign__form\">\r\n                    <a href=\"index.html\" className=\"sign__logo\">\r\n                      <img src={logo} width=\"70px\" height=\"70px\" alt />\r\n                    </a>\r\n                    <div className=\"sign__group\">\r\n                      <label\r\n                        for=\"usernewPassword\"\r\n                        className=\"form-label fs-5 login_label\"\r\n                      >\r\n                        New Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"sign__input\"\r\n                        placeholder=\"New Password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => {\r\n                          setNewPassword(e.target.value);\r\n\r\n                          if (!e.target.value) {\r\n                            return setError({\r\n                              ...error,\r\n                              newPassword: \"newPassword is required !\",\r\n                            });\r\n                          } else {\r\n                            return setError({\r\n                              ...error,\r\n                              newPassword: \"\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                      {error.newPassword && (\r\n                        <span style={{ color: \"red\" }}>\r\n                          {error.newPassword}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"sign__group\">\r\n                      <label\r\n                        for=\"usernewPassword\"\r\n                        className=\"form-label fs-5 login_label\"\r\n                      >\r\n                        Conform Password\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"sign__input\"\r\n                        placeholder=\"Conform Password\"\r\n                        value={password}\r\n                        // id=\"password-input\"\r\n                        // aria-describedby=\"passwordInput\"\r\n\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n\r\n                          if (!e.target.value) {\r\n                            return setError({\r\n                              ...error,\r\n                              password: \"Conform Password is required !\",\r\n                            });\r\n                          } else {\r\n                            return setError({\r\n                              ...error,\r\n                              password: \"\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                      {error.password && (\r\n                        <span style={{ color: \"red\" }}>{error.password}</span>\r\n                      )}\r\n                    </div>\r\n\r\n                    <button\r\n                      className=\"sign__btn\"\r\n                      type=\"button\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { forgotPassword })(ChangePassword);\r\n"],"names":["connect","forgotPassword","props","dispatch","useDispatch","toast","toastData","actionFor","useSelector","state","admin","newPassword","setNewPassword","useState","password","setPassword","error","setError","id","useParams","useEffect","setToast","type","CLOSE_ADMIN_TOAST","className","action","href","src","logo","width","height","alt","for","placeholder","value","onChange","e","target","style","color","onClick","preventDefault","details","confirmPassword"],"sourceRoot":""}